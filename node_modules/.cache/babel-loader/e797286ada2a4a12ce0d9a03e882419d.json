{"ast":null,"code":"import _slicedToArray from \"/Users/three4c/Documents/github/fullStackOpen2019/part1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/three4c/Documents/github/fullStackOpen2019/part1/src/part1/unicafe/index.tsx\";\nimport React, { useState } from 'react';\n\nconst UniCafe = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  const Statistics = props => {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"hoge\");\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"give feedback\"), React.createElement(\"button\", {\n    onClick: () => setGood(good + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"good\"), React.createElement(\"button\", {\n    onClick: () => setNeutral(neutral + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"neutral\"), React.createElement(\"button\", {\n    onClick: () => setBad(bad + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"bad\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"statistics\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"good\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, good)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"neutral\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, neutral)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"bad\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, bad)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"all\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, good + neutral + bad)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"average\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, (good - bad) / (good + neutral + bad) * 100)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"positive\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, good / (good + neutral + bad) * 100, \"%\"))))));\n};\n\nexport default UniCafe;","map":{"version":3,"sources":["/Users/three4c/Documents/github/fullStackOpen2019/part1/src/part1/unicafe/index.tsx"],"names":["React","useState","UniCafe","good","setGood","neutral","setNeutral","bad","setBad","Statistics","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA,oBACID,QAAQ,CAAC,CAAD,CADZ;AAAA;AAAA,QACbE,IADa;AAAA,QACPC,OADO;;AAAA,qBAEUH,QAAQ,CAAC,CAAD,CAFlB;AAAA;AAAA,QAEbI,OAFa;AAAA,QAEJC,UAFI;;AAAA,qBAGEL,QAAQ,CAAC,CAAD,CAHV;AAAA;AAAA,QAGbM,GAHa;AAAA,QAGRC,MAHQ;;AAKpB,QAAMC,UAAc,GAAGC,KAAK,IAAI;AAC9B,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,GAFD;;AAIA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMN,OAAO,CAACD,IAAI,GAAG,CAAR,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMG,UAAU,CAACD,OAAO,GAAG,CAAX,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAQ,IAAA,OAAO,EAAE,MAAMG,MAAM,CAACD,GAAG,GAAG,CAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,IAAL,CAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,OAAL,CAFF,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,GAAL,CAFF,CATF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,IAAI,GAAGE,OAAP,GAAiBE,GAAtB,CAFF,CAbF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,CAACJ,IAAI,GAAGI,GAAR,KAAgBJ,IAAI,GAAGE,OAAP,GAAiBE,GAAjC,CAAD,GAA0C,GAA/C,CAFF,CAjBF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,IAAI,IAAIA,IAAI,GAAGE,OAAP,GAAiBE,GAArB,CAAL,GAAkC,GAAvC,MAFF,CArBF,CADF,CAFF,CAPF,CADF;AAyCD,CAlDD;;AAoDA,eAAeL,OAAf","sourcesContent":["import React, { FC, useState } from 'react';\n\nconst UniCafe = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const Statistics: FC = props => {\n    return <p>hoge</p>;\n  };\n\n  return (\n    <>\n      <div>\n        <h2>give feedback</h2>\n        <button onClick={() => setGood(good + 1)}>good</button>\n        <button onClick={() => setNeutral(neutral + 1)}>neutral</button>\n        <button onClick={() => setBad(bad + 1)}>bad</button>\n      </div>\n      <div>\n        <h2>statistics</h2>\n        <table>\n          <tbody>\n            <tr>\n              <th>good</th>\n              <td>{good}</td>\n            </tr>\n            <tr>\n              <th>neutral</th>\n              <td>{neutral}</td>\n            </tr>\n            <tr>\n              <th>bad</th>\n              <td>{bad}</td>\n            </tr>\n            <tr>\n              <th>all</th>\n              <td>{good + neutral + bad}</td>\n            </tr>\n            <tr>\n              <th>average</th>\n              <td>{((good - bad) / (good + neutral + bad)) * 100}</td>\n            </tr>\n            <tr>\n              <th>positive</th>\n              <td>{(good / (good + neutral + bad)) * 100}%</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default UniCafe;\n"]},"metadata":{},"sourceType":"module"}