{"ast":null,"code":"import _slicedToArray from \"/Users/three4c/Documents/github/fullStackOpen2019/part1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/three4c/Documents/github/fullStackOpen2019/part1/src/part1/unicafe/index.tsx\";\nimport React, { useState } from 'react';\n\nconst UniCafe = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  const all = good + neutral + bad;\n\n  const Statistics = props => {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, props.text), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, props.value));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"give feedback\"), React.createElement(\"button\", {\n    onClick: () => setGood(good + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"good\"), React.createElement(\"button\", {\n    onClick: () => setNeutral(neutral + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"neutral\"), React.createElement(\"button\", {\n    onClick: () => setBad(bad + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"bad\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"statistics\"), good || neutral || bad ? React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Statistics, {\n    text: \"good\",\n    value: good,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    text: \"neutral\",\n    value: neutral,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    text: \"bad\",\n    value: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    text: \"all\",\n    value: all,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    text: \"average\",\n    value: (good - bad) / all,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"good\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, good)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"neutral\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, neutral)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"bad\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, bad)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"all\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, good + neutral + bad)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"average\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, (good - bad) / (good + neutral + bad))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"positive\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, good / (good + neutral + bad) * 100, \"%\")))) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"No feedback giiven\")));\n};\n\nexport default UniCafe;","map":{"version":3,"sources":["/Users/three4c/Documents/github/fullStackOpen2019/part1/src/part1/unicafe/index.tsx"],"names":["React","useState","UniCafe","good","setGood","neutral","setNeutral","bad","setBad","all","Statistics","props","text","value"],"mappings":"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","sourcesContent":["import React, { FC, useState } from 'react';\n\ninterface UniCafeProps {\n  text: string;\n  value: number;\n}\n\nconst UniCafe = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const all = good + neutral + bad;\n\n  const Statistics: FC<UniCafeProps> = props => {\n    return (\n      <tr>\n        <th>{props.text}</th>\n        <td>{props.value}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <>\n      <div>\n        <h2>give feedback</h2>\n        <button onClick={() => setGood(good + 1)}>good</button>\n        <button onClick={() => setNeutral(neutral + 1)}>neutral</button>\n        <button onClick={() => setBad(bad + 1)}>bad</button>\n      </div>\n      <div>\n        <h2>statistics</h2>\n        {good || neutral || bad ? (\n          <table>\n            <tbody>\n              <Statistics text=\"good\" value={good} />\n              <Statistics text=\"neutral\" value={neutral} />\n              <Statistics text=\"bad\" value={bad} />\n              <Statistics text=\"all\" value={all} />\n              <Statistics text=\"average\" value={(good - bad) / all} />\n              <tr>\n                <th>good</th>\n                <td>{good}</td>\n              </tr>\n              <tr>\n                <th>neutral</th>\n                <td>{neutral}</td>\n              </tr>\n              <tr>\n                <th>bad</th>\n                <td>{bad}</td>\n              </tr>\n              <tr>\n                <th>all</th>\n                <td>{good + neutral + bad}</td>\n              </tr>\n              <tr>\n                <th>average</th>\n                <td>{(good - bad) / (good + neutral + bad)}</td>\n              </tr>\n              <tr>\n                <th>positive</th>\n                <td>{(good / (good + neutral + bad)) * 100}%</td>\n              </tr>\n            </tbody>\n          </table>\n        ) : (\n          <p>No feedback giiven</p>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default UniCafe;\n"]},"metadata":{},"sourceType":"module"}